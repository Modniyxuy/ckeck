version: '3.8'

services:
  app:
    container_name: app
    env_file: .env
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    ports:
      - $SERVER_PORT:$SERVER_PORT
      - 9229:9229
    depends_on:
      - postgresql
    command: npm run start:prod
    restart: unless-stopped
  postgresql:
    container_name: postgresql
    image: postgres
    ports:
      - $DATABASE_PORT:$DATABASE_PORT
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: $DATABASE
      POSTGRES_USER: $DATABASE_USERNAME
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
    restart: unless-stopped
  nginx:
    container_name: nginx
    image: nginx:apline
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - postgresql
    volumes:
      - ./proxy.conf:/etc/nginx/conf.d/default.conf
      - etc-letsencrypt:/etc/letsencrypt
    networks:
      - 
    restart: unless-stopped
  certbot:
    container_name: certbot
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    command: cetronly --webroot --webroot-path=/app --email modniyxuy@protonmail.com --agree-tos --no-eff-email -d example.org
volumes:
  pg_data:
  www-html:
  etc-letsencrypt:
networks:
  network:
    driver: bridge
