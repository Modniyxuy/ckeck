version: '3.8'

services:
  dev:
    container_name: app_dev
    image: app-dev:1.0.0
    env_file: .env
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    ports:
      - $SERVER_PORT:$SERVER_PORT
      - 9229:9229
    depends_on:
      - postgresql
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run start:dev
    restart: unless-stopped
  prod:
    container_name: app_prod
    image: app-prod:1.0.0
    env_file: .env
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    ports:
      - $SERVER_PORT:$SERVER_PORT
      - 9229:9229
    depends_on:
      - postgresql
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run start:prod
    restart: unless-stopped
  postgresql:
    container_name: postgresql
    image: postgres
    restart: unless-stopped
    ports:
      - $DATABASE_PORT:$DATABASE_PORT
    environment:
      POSTGRES_DB: $DATABASE
      POSTGRES_USER: $DATABASE_USERNAME
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./proxy.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - dev
      - prod
    networks:
      - network
networks:
  network:
    driver: bridge
